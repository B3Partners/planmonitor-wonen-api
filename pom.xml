<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2024 Provincie Zeeland

SPDX-License-Identifier: MIT
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.0</version>
    </parent>
    <groupId>nl.b3p.pmw</groupId>
    <artifactId>planmonitor-wonen-api</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Planmonitor Wonen API</name>
    <description>Planmonitor Wonen API provides the backend for Planmonitor Wonen</description>
    <url>https://github.com/B3Partners/planmonitor-wonen-api/</url>
    <inceptionYear>2024</inceptionYear>
    <organization>
        <name>Provincie Zeeland</name>
        <url>https://zeeland.nl/</url>
    </organization>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://raw.githubusercontent.com/B3Partners/planmonitor-wonen-api/main/LICENSES/MIT.txt</url>
            <distribution>repo</distribution>
            <comments>For the planmonitor-wonen-api code.</comments>
        </license>
        <license>
            <name>CC0-1.0</name>
            <url>https://raw.githubusercontent.com/B3Partners/planmonitor-wonen-api/main/LICENSES/CC0-1.0.txt</url>
            <distribution>repo</distribution>
            <comments>For the planmonitor-wonen-api documentation.</comments>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>matthijsln</id>
            <name>Matthijs Laan</name>
            <email>matthijslaan@b3partners.nl</email>
            <organization>B3Partners B.V.</organization>
            <organizationUrl>https://www.b3partners.nl</organizationUrl>
        </developer>
        <developer>
            <id>mprins</id>
            <name>Mark Prins</name>
            <email>mark@b3partners.nl</email>
            <organization>B3Partners B.V.</organization>
            <organizationUrl>https://www.b3partners.nl</organizationUrl>
        </developer>
        <developer>
            <id>geertplaisier</id>
            <name>Geert Plaisier</name>
            <email>geert@b3partners.nl</email>
            <organization>Gnamic</organization>
            <organizationUrl>https://www.gnamic.nl/</organizationUrl>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git@github.com:B3Partners/planmonitor-wonen-api.git</connection>
        <developerConnection>scm:git:git@github.com:B3Partners/planmonitor-wonen-api.git</developerConnection>
        <url>https://github.com/B3Partners/planmonitor-wonen-api/</url>
    </scm>
    <issueManagement>
        <system>Jira</system>
        <url>https://b3partners.atlassian.net/browse/PMW</url>
    </issueManagement>
    <ciManagement>
        <system>Github Actions</system>
        <url>https://github.com/B3Partners/planmonitor-wonen-api/actions</url>
    </ciManagement>
    <distributionManagement>
        <repository>
            <id>repo.b3p.nl</id>
            <name>B3Partners releases repository</name>
            <url>https://repo.b3p.nl/nexus/repository/privatereleases/</url>
        </repository>
        <snapshotRepository>
            <id>repo.b3p.nl</id>
            <name>B3Partners snapshots repository</name>
            <url>https://repo.b3p.nl/nexus/repository/privatesnapshots/</url>
        </snapshotRepository>
        <site>
            <id>gh-pages</id>
            <name>github pages site</name>
            <url>scm:git:ssh://git@github.com/b3partners/planmonitor-wonen-api.git</url>
        </site>
    </distributionManagement>
    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
        <project.build.outputTimestamp>2024-04-05T14:43:12Z</project.build.outputTimestamp>
        <geotools.version>32.1</geotools.version>
        <jts.version>1.19.0</jts.version>
        <spring.boot.version>${project.parent.version}</spring.boot.version>
        <!--
        Spring-Boot version overrides. see org.springframework.boot:spring-boot-dependencies
        eg. https://search.maven.org/artifact/org.springframework.boot/spring-boot-dependencies

        and use
            mvn -U org.codehaus.mojo:versions-maven-plugin:display-dependency-updates
        and
            mvn -U org.codehaus.mojo:versions-maven-plugin:display-plugin-updates
        to check
        -->
        <commons-lang3.version>3.16.0</commons-lang3.version>
        <flyway.version>10.17.2</flyway.version>
        <!--        <jackson-bom.version>2.17.1</jackson-bom.version>-->
        <!--        <micrometer.version>1.13.1</micrometer.version>-->
        <junit-jupiter.version>5.11.3</junit-jupiter.version>
        <postgresql.version>42.7.4</postgresql.version>
        <!--        <logback.version>1.5.7</logback.version>-->
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <maven-deploy-plugin.version>3.1.0</maven-deploy-plugin.version>
        <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
        <maven-javadoc-plugin.version>3.11.1</maven-javadoc-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-assembly-plugin.version>3.4.2</maven-assembly-plugin.version>
        <maven-enforcer-plugin.version>3.2.1</maven-enforcer-plugin.version>
        <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
        <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
        <!-- end version overrides -->
        <maven-pmd-plugin.version>3.26.0</maven-pmd-plugin.version>
        <versions-maven-plugin.version>2.18.0</versions-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <dependency-check-maven.version>11.1.0</dependency-check-maven.version>
        <modernizer-maven-plugin.version>2.9.0</modernizer-maven-plugin.version>
        <pmd.version>7.0.0</pmd.version>
        <maven-fluido-skin.version>2.0.0</maven-fluido-skin.version>
        <errorProne.version>2.36.0</errorProne.version>
        <errorProneFlags>-XepDisableWarningsInGeneratedCode</errorProneFlags>
        <errorProneExcludePaths>${project.build.directory}/generated-sources/.*</errorProneExcludePaths>
        <compiler.lint>deprecation,unchecked</compiler.lint>
        <failOnValidation>true</failOnValidation>
        <fmt.action>format</fmt.action>
        <pom.fmt.action>sort</pom.fmt.action>
        <!-- suppress missing javadoc warnings -->
        <javadoc.doclint>all,-missing</javadoc.doclint>
        <!-- docker.b3p.nl or alternatively ghcr.io  -->
        <docker.deploy.repo>ghcr.io</docker.deploy.repo>
        <docker.skip>false</docker.skip>
        <docker.pull.policy>ALWAYS</docker.pull.policy>
        <!-- skip QA checks -->
        <skipQA>false</skipQA>
        <skipSBOM>false</skipSBOM>
        <skipJavaDoc>false</skipJavaDoc>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-annotations</artifactId>
                <version>${modernizer-maven-plugin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-main</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wfs-ng</artifactId>
            <version>${geotools.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-epsg-hsql</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>B3Partners</id>
            <name>Releases hosted by B3Partners</name>
            <url>https://repo.b3p.nl/nexus/repository/public/</url>
        </repository>
    </repositories>
    <build>
        <defaultGoal>install</defaultGoal>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/application*.properties</include>
                    <include>**/git.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application*.properties</exclude>
                    <exclude>**/git.properties</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>${basedir}/src/test/resources</directory>
                <includes>
                    <include>**/application*.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <excludes>
                    <exclude>**/application*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.ekryd.sortpom</groupId>
                    <artifactId>sortpom-maven-plugin</artifactId>
                    <version>4.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify.fmt</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>2.25</version>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-publish-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.21.0</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>9.0.1</version>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                </configuration>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>nl/b3p/planmonitor-wonen/api/model/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>merge</goal>
                            <goal>report-integration</goal>
                            <goal>report</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${surefireArgLine}</argLine>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <classifier>exec</classifier>
                    <!--suppress UnresolvedMavenProperty -->
                    <jvmArguments>${surefireArgLine}</jvmArguments>
                    <!--wait between attempts, default 500 ms -->
                    <wait>1000</wait>
                    <!--max attempts to check if application is up, default 60 -->
                    <maxAttempts>120</maxAttempts>
                    <image>
                        <name>${docker.deploy.repo}/b3partners/${project.artifactId}:snapshot</name>
                        <!-- TODO setup in release profile -->
                        <!--<tags>${docker.deploy.repo}/b3partners/${project.artifactId}:latest</tags>-->
                        <!-- TODO setup w/ true in release profile to push image -->
                        <publish>false</publish>
                        <env>
                            <BP_OCI_SOURCE>${project.scm.url}</BP_OCI_SOURCE>
                            <!--suppress UnresolvedMavenProperty -->
                            <BP_OCI_REVISION>${git.commit.id.abbrev}</BP_OCI_REVISION>
                            <BP_OCI_VERSION>${project.version}</BP_OCI_VERSION>
                            <BP_OCI_CREATED>${project.build.outputTimestamp}</BP_OCI_CREATED>
                            <BP_OCI_URL>${docker.deploy.repo}/b3partners/${project.artifactId}:${project.version}</BP_OCI_URL>
                            <BP_OCI_DESCRIPTION>${project.description}</BP_OCI_DESCRIPTION>
                            <BP_OCI_LICENSES>${project.licenses}</BP_OCI_LICENSES>
                        </env>
                        <pullPolicy>${docker.pull.policy}</pullPolicy>
                    </image>
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                    <docker>
                        <publishRegistry>
                            <!-- TODO setup in release profile; it seems this plugin cannot use a pre-existing repo login/session from the user profile-->
                            <!--    <username>${docker.publish.username}</username>-->
                            <!--    <password>${docker.publish.password}</password>-->
                        </publishRegistry>
                    </docker>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start-spring-boot</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <!--suppress UnresolvedMavenProperty -->
                            <skip>${skipTests}</skip>
                            <profiles>
                                <profile>test</profile>
                            </profiles>
                            <!--suppress UnresolvedMavenProperty -->
                            <jvmArguments>${failsafeArgLine}</jvmArguments>
                            <useTestClasspath>true</useTestClasspath>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-spring-boot</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration />
                    </execution>
                    <execution>
                        <id>build-docker-image</id>
                        <goals>
                            <goal>build-image-no-fork</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <skip>${docker.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <compilerArgs combine.children="append">
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>--should-stop=ifError=FLOW</arg>
                        <arg>-Xplugin:ErrorProne -XepExcludedPaths:${errorProneExcludePaths} ${errorProneFlags}</arg>
                        <arg>-Xlint:${compiler.lint}</arg>
                        <arg>-Werror</arg>
                        <arg>-Xmaxwarns</arg>
                        <arg>1000</arg>
                        <!-- see https://errorprone.info/docs/installation -->
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${errorProne.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <notimestamp>true</notimestamp>
                            <failOnWarnings>false</failOnWarnings>
                            <failOnError>${failOnValidation}</failOnError>
                            <skip>${skipJavaDoc}</skip>
                            <doclint>${javadoc.doclint}</doclint>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- not bound to any lifecycle, but can be run from commandline using:
                mvn -U install -DskipTests -DskipITs org.owasp:dependency-check-maven:check -->
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <suppressionFile>${project.basedir}/build/qa/owasp-suppression.xml</suppressionFile>
                    <hintsFile>${project.basedir}/build/qa/owasp-hints.xml</hintsFile>
                    <format>ALL</format>
                    <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <rulesets>
                        <ruleset>${project.basedir}/build/qa/pmd-ruleset.xml</ruleset>
                        <ruleset>${project.basedir}/build/qa/pmd-junit-ruleset.xml</ruleset>
                    </rulesets>
                    <failurePriority>3</failurePriority>
                    <minimumPriority>3</minimumPriority>
                    <verbose>true</verbose>
                    <printFailingErrors>true</printFailingErrors>
                    <includeTests>true</includeTests>
                    <analysisCache>true</analysisCache>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <version>${modernizer-maven-plugin.version}</version>
                <configuration>
                    <javaVersion>${java.version}</javaVersion>
                    <skip>${skipQA}</skip>
                    <failOnViolations>true</failOnViolations>
                </configuration>
                <executions>
                    <execution>
                        <id>modernizer</id>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify.fmt</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <configuration>
                    <verbose>false</verbose>
                    <filesNamePattern>.*\.java</filesNamePattern>
                    <skip>${skipQA}</skip>
                    <style>google</style>
                    <displayFiles>true</displayFiles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>${fmt.action}</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.ekryd.sortpom</groupId>
                <artifactId>sortpom-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <keepBlankLines>false</keepBlankLines>
                    <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                    <createBackupFile>false</createBackupFile>
                    <verifyFail>stop</verifyFail>
                    <verifyFailOn>strict</verifyFailOn>
                    <expandEmptyElements>false</expandEmptyElements>
                    <nrOfIndentSpace>4</nrOfIndentSpace>
                    <indentSchemaLocation>false</indentSchemaLocation>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>${pom.fmt.action}</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.9</version>
                                    <message>Requires Maven 3.9</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                    <message>Requires Java ${java.version}</message>
                                </requireJavaVersion>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>junit:junit</exclude>
                                        <exclude>org.hamcrest:hamcrest-core</exclude>
                                        <exclude>log4j:log4j</exclude>
                                        <exclude>joda-time:joda-time</exclude>
                                    </excludes>
                                </bannedDependencies>
                                <banTransitiveDependencies>
                                    <excludes>
                                        <exclude>org.springframework.boot:spring-boot-starter</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-web</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-data-jpa</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-actuator</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-test</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-validation</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-aop</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-security</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-jdbc</exclude>
                                        <exclude>org.springframework.security:spring-security-test</exclude>
                                        <exclude>io.micrometer:micrometer-registry-prometheus</exclude>
                                        <!-- basically each and every geotools module has a load of transitive dependencies -->
                                        <exclude>org.geotools:*</exclude>
                                        <exclude>org.flywaydb:flyway-core</exclude>
                                        <exclude>org.postgresql:postgresql</exclude>
                                    </excludes>
                                </banTransitiveDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <pushChanges>true</pushChanges>
                    <releaseProfiles>release</releaseProfiles>
                    <tagNameFormat>planmonitor-wonen-api-@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <skipDeploy>true</skipDeploy>
                    <generateSitemap>true</generateSitemap>
                    <attach>false</attach>
                    <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.skins</groupId>
                        <artifactId>maven-fluido-skin</artifactId>
                        <version>${maven-fluido-skin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <configuration>
                    <content>${project.reporting.outputDirectory}</content>
                    <scmBranch>gh-pages</scmBranch>
                    <tryUpdate>true</tryUpdate>
                    <addUniqueDirectory>true</addUniqueDirectory>
                    <checkoutDirectory>/tmp/gh-pages</checkoutDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>scm-publish</id>
                        <!-- deploy site with maven-scm-publish-plugin -->
                        <goals>
                            <goal>publish-scm</goal>
                        </goals>
                        <phase>site-deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>2.9.0</version>
                <configuration>
                    <projectType>application</projectType>
                    <skip>${skipSBOM}</skip>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>makeBom</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.6.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <rulesets>
                        <ruleset>${project.basedir}/build/qa/pmd-ruleset.xml</ruleset>
                        <ruleset>${project.basedir}/build/qa/pmd-junit-ruleset.xml</ruleset>
                    </rulesets>
                    <linkXRef>true</linkXRef>
                    <includeTests>false</includeTests>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.8.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>ci-management</report>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-management</report>
                            <report>distribution-management</report>
                            <report>index</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>plugin-management</report>
                            <report>plugins</report>
                            <report>scm</report>
                            <report>summary</report>
                            <report>team</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <notimestamp>true</notimestamp>
                    <failOnWarnings>false</failOnWarnings>
                    <failOnError>${failOnValidation}</failOnError>
                    <doclint>${javadoc.doclint}</doclint>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc-no-fork</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>Deprecated Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>@deprecated</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <title>Aggregate Test Coverage</title>
                    <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                    <dataFileIncludes>
                        <!-- this has merged test and integrationtest coverage -->
                        <dataFileInclude>${project.build.directory}/jacoco.exec</dataFileInclude>
                        <!-- NO! <dataFileInclude>${project.build.directory}/jacoco-it.exec</dataFileInclude>-->
                    </dataFileIncludes>
                    <excludes>
                        <exclude>nl/b3p/tailormap/api/viewer/model/**</exclude>
                        <exclude>nl/b3p/tailormap/api/persistence/json/**</exclude>
                    </excludes>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                            <!-- NO! <report>report-integration</report>-->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <name>OWASP Dependency Check</name>
                    <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <profiles>
        <profile>
            <id>release</id>
            <properties />
        </profile>
    </profiles>
</project>
