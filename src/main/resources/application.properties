# base path for the API
planmonitorwonen-api.base-path=/api/planmonitorwonen
planmonitorwonen-api.admin.base-path=/api/planmonitorwonen/admin


# page size for features
planmonitorwonen-api.pageSize=100

# in the tailormap-viewer Docker Compose stack this is changed to 0.0.0.0
server.address=localhost
server.http2.enabled=true
server.compression.enabled=true

spring.main.banner-mode=off
spring.application.name=@project.artifactId@


# Actuator

# Use the Spring CLI encodepassword command to encode a password and set the following environment
# variable to set the password for the 'actuator' account for access to the management APIs at
# /api/planmonitorwonen/actuator using HTTP Basic.
# The 'actuator' account will be added to the database only if it does already not exist. It is
# possible for a user admin to change the password via the admin interface, or remove/disable it.
planmonitorwonen-api.management.hashed-password=${MANAGEMENT_HASHED_PASSWORD:#{null}}
# TODO: for deployments not publicly accessible for scraping but which do have push access, configure the Prometheus Pushgateway.

management.endpoints.enabled-by-default=false
management.endpoints.web.base-path=/api/planmonitorwonen/actuator
management.endpoints.web.exposure.include=info,health,prometheus,loggers,logfile,mappings

# we don't have a logfile configured, so this will return 404
management.endpoint.logfile.enabled=true
# NOTE this `loggers` is an endpoint that can change the configuration while running using POST requests
management.endpoint.loggers.enabled=true
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoint.configprops.show-values=WHEN_AUTHORIZED
# too slow with bcrypt and http basic (~100ms password hashing each request) - use prometheus endpoint instead
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=true
management.metrics.tags.application=${planmonitorwonen-api.name}
management.metrics.tags.hostname=${HOST:localhost}
management.metrics.data.repository.autotime.enabled=true
management.metrics.data.repository.autotime.percentiles=0.5,0.95,0.99
management.prometheus.metrics.export.enabled=true
management.prometheus.metrics.export.descriptions=true

logging.level.org.springframework.boot=INFO
logging.level.org.springframework.boot.autoconfigure=INFO
logging.level.org.springframework.test.context=INFO

logging.level.nl.b3p.planmonitorwonen.api=DEBUG

