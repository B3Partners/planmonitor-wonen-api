planmonitor-wonen-api.version=@project.version@
planmonitor-wonen-api.apiVersion=@info.version@
# base path for the API
planmonitor-wonen-api.base-path=/api/planmonitor-wonen

planmonitor-wonen-api.wfs.bestuurlijke-gebieden=https://service.pdok.nl/kadaster/bestuurlijkegebieden/wfs/v1_0
planmonitor-wonen-api.wfs.bestuurlijke-gebieden.provincies-typename=bestuurlijkegebieden:Provinciegebied
planmonitor-wonen-api.wfs.bestuurlijke-gebieden.provincies-propertyname=naam
planmonitor-wonen-api.wfs.bestuurlijke-gebieden.gemeentes-typename=bestuurlijkegebieden:Gemeentegebied

planmonitor-wonen-api.wfs.ruimte=https://opengeodata.zeeland.nl/geoserver/ruimte/wfs
planmonitor-wonen-api.wfs.ruimte.regios-typename=ruimte:georok_plnmntwnnregvlk
planmonitor-wonen-api.wfs.ruimte.regios-propertyname=regios
planmonitor-wonen-api.wfs.ruimte.woonmilieu-typename=ruimte:georok_plnmntwnnwonmiltopvlk
planmonitor-wonen-api.wfs.ruimte.woonmilieu-propertyname=woonmilieutypologie

planmonitor-wonen-api.populate-testdata=true

tailormap-api.cookie.path=
tailormap-api.credentials.url=http://localhost:8080/api/user
tailormap-api.redirect.url=http://localhost:8080/api/unauthorized

# in the tailormap-viewer Docker Compose stack this is changed to 0.0.0.0
server.address=localhost
server.port=8081
server.http2.enabled=true
server.compression.enabled=true
server.forward-headers-strategy=native
# should not use cookie
server.servlet.session.tracking-modes=URL


spring.main.banner-mode=off
spring.application.name=@project.artifactId@

spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

spring.datasource.url=jdbc:postgresql:planmonitor-wonen
spring.datasource.username=planmonitor-wonen
spring.datasource.password=planmonitor-wonen

# Actuator
management.endpoints.enabled-by-default=true
management.endpoints.web.base-path=/api/planmonitorwonen/actuator
management.endpoints.web.exposure.include=info,health,prometheus,loggers,logfile,mappings

# we don't have a logfile configured, so this will return 404
management.endpoint.logfile.enabled=true
# NOTE this `loggers` is an endpoint that can change the configuration while running using POST requests
management.endpoint.loggers.enabled=true
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=ALWAYS
management.endpoint.configprops.show-values=WHEN_AUTHORIZED
# too slow with bcrypt and http basic (~100ms password hashing each request) - use prometheus endpoint instead
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.hostname=${HOST:localhost}
management.metrics.data.repository.autotime.enabled=true
management.metrics.data.repository.autotime.percentiles=0.5,0.95,0.99
management.prometheus.metrics.export.enabled=true
management.prometheus.metrics.export.descriptions=true

logging.level.org.springframework.boot=INFO
logging.level.org.springframework.boot.autoconfigure=INFO
logging.level.org.springframework.test.context=INFO
logging.level.org.springframework.security.web.authentication=DEBUG

logging.level.nl.b3p.planmonitorwonen.api=DEBUG

